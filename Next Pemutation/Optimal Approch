//time->O(3n)->O(n)
//space ->O(1)

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
      int ind=-1,number=-1,nextNumb=-1,nextInd=-1;
      int n=nums.size()-1;
      while(n!=0){
              if(nums[n-1]<nums[n]){
                      ind=n-1;
                      number=nums[n-1];
                      break;
              }
              n--;
      }
      if(ind==-1){
              reverse(nums.begin(),nums.end());
              return;
      }
      for(int i=nums.size()-1;i>ind;i--){
              if(nums[i]>number){
                      nextNumb=nums[i];
                      nextInd=i;
                      break;
              }
      } 
      swap(nums[ind],nums[nextInd]);
      reverse(nums.begin()+ind+1,nums.end());
      return ;
            
            
    }
};
