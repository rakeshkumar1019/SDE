//time->O(n)
//space->O(n^2)

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
            vector<vector<int>>res;
            if(intervals.size()==0)return res;
            sort(intervals.begin(),intervals.end());
              vector<int>pair;
               pair=intervals[0];
        for(int i=1;i<intervals.size();i++){
                vector<int>temp;
                if(pair[1]>=intervals[i][0]){
                      pair[1]=max(pair[1],intervals[i][1]) ; 
                }else{
                        temp.push_back(pair[0]);
                        temp.push_back(pair[1]);
                        res.push_back(temp);
                        pair[0]=intervals[i][0];
                        pair[1]=intervals[i][1];
   
                }
        }
                          vector<int>temp;

                        temp.push_back(pair[0]);
                        temp.push_back(pair[1]);
                        res.push_back(temp);

            return res;
    }
};
